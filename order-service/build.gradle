plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {
//    // Spring Boot Starter JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Boot Starter Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Eureka Client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // H2 Database
    runtimeOnly 'com.h2database:h2:1.3.176'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ModelMapper
    implementation 'org.modelmapper:modelmapper:2.3.8'

    // MariaDB Driver
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.2'

    // Kafka (주석 처리된 부분 활성화 시 사용 가능)
    implementation 'org.springframework.kafka:spring-kafka'

    // Micrometer 및 Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
